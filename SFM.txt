SDS File Manager (SFM)

The SDS File Manager (SFM) is a CLI file manager for structured directories (sirectories). It is
available for all major operating systems. Just download an appropriate binary and start using.

Displaying Contents of A Structured Directory (Sirectory)

SFM allows display of directory contents in an horizontal manner, as well as a vertical a manner.

	Horizontal Manner
		a.txt b.txt c.txt d.txt
		e.txt f.txt g.txt h.txt

	Vertical Manner
		a.txt c.txt e.txt g.txt
		b.txt d.txt f.txt h.txt

SFM also allows the display of a dir-content's type; D for dir and F for file. E.g.:
	httpd (D), log (F)

Notes
	PWD would mean user's present working directory.
	Hidden file would mean file starting with ".".

Syntax
	sfm {Valid Unix filepath or ignore if pwd} {Chain of additional commands}

Examples
	sfm x // Horizontal display of pwd
	sfm y // Vertical display of pwd
	sfm xt // Horizontal display of pwd, with content type displayed
	sfm yt // Vertical display of pwd, with content type displayed
	sfm someDir x // Horizontal display of a dir not the pwd
	sfm someDir y // Vertical display of a dir not the pwd
	sfm someDir xt // Horizontal display of a dir not the pwd, with content type displayed
	sfm someDir yt // Vertical display of a dir not the pwd, with content type displayed

Creating New Files and Subdees

SFM allows you to create new files and (sub-directories) subdees at:

	- the beginning of the dir;
	- the end of the dir;
	- the front of another file/subdee;
	- the back of another file/subdee

	sfm nf {New file name} a // Creating file at the beginning of the dir
	sfm nf {New file name} z // Creating file at the end of the dir
	sfm nf {New file name} f {Old file name} // Creating file in front of another file/subdee
	sfm nf {New file name} b {Old file name} // Creating file at the back of another file/subdee
	sfm nf {New file name} // Creating file without bothering about position

	sfm nd {New subdee name} a // Creating subdee at the beginning of the dir
	sfm nd {New subdee name} z // Creating subdee at the end of the dir
	sfm nd {New subdee name} f {Old file name} // Creating subdee in front of another
		file/subdee
	sfm nd {New subdee name} b {Old file name} // Creating subdee at the back of another
		file/subdee
	sfm nd {New subdee name} // Creating subdee without bothering about position

Moving Files and Subdees

SFM allows you to move files and subdees about. Movements can only be performed within the present
working directory. Files and subdees can be moved to:

	- the beginning of the dir;
	- the end of the dir;
	- the front of another file/subdee;
	- the back of another file/subdee;
	- n steps to the left of current position;
	- n steps to the right of current position

	sfm mv {File name or subdee name} a // Moving to The Beginning of The Dir
	sfm mv {File name or subdee name} z // Moving to The End of The Dir
	sfm mv {File name or subdee name} f {Other file} // Moving to The Front of Another
		File/Subdee
	sfm mv {File name or subdee name} b {Other file} // Moving to The Back of Another
		File/Subdee

Directory Segregation

In traditional file managers, files and directories are often segregated. That is, the subdees are
listed before or after listing the files in the dir.

	E.g.: a (file), d (file), f (file), B (dir), C (dir), Z (dir)
	E.g.: E (dir), S (dir), W (dir), r (file), t (file), y (file)

SFM however allows files and directories to mix freely. For example, the examples above can
respectively be the following:

	E.g.: a (file), B (dir), C (dir), d (file), f (file), Z (dir)
	E.g.: E (dir), r (file), S (dir), t (file), W (dir), y (file)

Assuming the files and subdees in your dir are mixed, the following command can be used to
segregate them:

	sfm sg da // Directories would be listed after files.
	sfm sg db // Directories would be listed before files.

Desegregating a Segregated Dir

	sfm ds

Moving Files and Subdees (Revisited)

If command "sfm mv {File name} a" or "sfm mv {File name} z" is performed for a file in a structured
dir, the file would be placed at the beginning of the files section, not necessarily the beginning
of the dir. The same goes for subdees.

Getting An SDS Dir's Basic Info

How can you know if an SDS directory is segregated? How can you know what ordering an SDS dir in
under? How can you learn some basic info about an SDS dir? Well, by issuing the command:

	sfm di

SFM Help

	sfm hp inf // To get some info about the SFM
	sfm hp doc // To get usage document

Shortcuts

Note: Shortcuts can change with version.

sfm x  | sfm
sfm xt | sfm t
